<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>duozhang.xin</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://next.duozhang.xin/"/>
  <updated>2018-11-30T03:56:59.000Z</updated>
  <id>https://next.duozhang.xin/</id>
  
  <author>
    <name>Stephen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>虾米音乐接口整理</title>
    <link href="https://next.duozhang.xin/2018/11/14/%E8%99%BE%E7%B1%B3%E9%9F%B3%E4%B9%90%E6%8E%A5%E5%8F%A3%E6%95%B4%E7%90%86/"/>
    <id>https://next.duozhang.xin/2018/11/14/虾米音乐接口整理/</id>
    <published>2018-11-14T10:05:22.000Z</published>
    <updated>2018-11-30T03:56:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>分析这些接口最方便的方法就是在浏览器里面打开移动端的页面，通常为m.xxx，如虾米的是m.xiami.com/。</p><p><img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/WeChat3c39823c3abe740e6b87237b5ff4184c-168x300.png" alt></p><p>点击“虾米音乐榜”，鼠标移到最下面，点击“查看更多”，然后看发出的请求</p><p><img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/WeChatf355774ffaea0804167dc9c8b79b87f7-300x223.png" alt><img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/WeChat71e07395c38615ee730d07419c31a4ff-300x217.png" alt></p><pre><code>这里有一点需要注意，在xhr里是找不到请求的，需要在all里面找</code></pre><p>下面是我整理的一些API，请求时在header里面加上referer即可，如：”Referer”: “<a href="http://h.xiami.com/index.html?f=&amp;from=&amp;ch=" target="_blank" rel="noopener">http://h.xiami.com/index.html?f=&amp;from=&amp;ch=</a>“</p><p>虾米音乐榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=101&amp;page=1&amp;limit=20&amp;_ksTS=1542186375180_98&amp;callback=jsonp99&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=101&amp;page=1&amp;limit=20&amp;_ksTS=1542186375180_98&amp;callback=jsonp99&amp;r=rank/song-list</a></p><p>虾米原创帮</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=103&amp;page=1&amp;limit=20&amp;_ksTS=1542186797937_98&amp;callback=jsonp99&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=103&amp;page=1&amp;limit=20&amp;_ksTS=1542186797937_98&amp;callback=jsonp99&amp;r=rank/song-list</a></p><p>Hito中文排行榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=1&amp;page=1&amp;limit=20&amp;_ksTS=1542186867931_116&amp;callback=jsonp117&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=1&amp;page=1&amp;limit=20&amp;_ksTS=1542186867931_116&amp;callback=jsonp117&amp;r=rank/song-list</a></p><p>香港劲歌金曲</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=2&amp;page=1&amp;limit=20&amp;_ksTS=1542187024066_134&amp;callback=jsonp135&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=2&amp;page=1&amp;limit=20&amp;_ksTS=1542187024066_134&amp;callback=jsonp135&amp;r=rank/song-list</a></p><p>英国UK单曲榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=3&amp;page=1&amp;limit=25&amp;_ksTS=1542187075503_152&amp;callback=jsonp153&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=3&amp;page=1&amp;limit=25&amp;_ksTS=1542187075503_152&amp;callback=jsonp153&amp;r=rank/song-list</a></p><p>BillBoard单曲榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=4&amp;page=1&amp;limit=25&amp;_ksTS=1542187098350_169&amp;callback=jsonp170&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=4&amp;page=1&amp;limit=25&amp;_ksTS=1542187098350_169&amp;callback=jsonp170&amp;r=rank/song-list</a></p><p>Oricon公信单曲榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=5&amp;page=1&amp;limit=20&amp;_ksTS=1542187133983_186&amp;callback=jsonp187&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=5&amp;page=1&amp;limit=20&amp;_ksTS=1542187133983_186&amp;callback=jsonp187&amp;r=rank/song-list</a></p><p>M-net综合数据周榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=6&amp;page=1&amp;limit=25&amp;_ksTS=1542187157251_204&amp;callback=jsonp205&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=6&amp;page=1&amp;limit=25&amp;_ksTS=1542187157251_204&amp;callback=jsonp205&amp;r=rank/song-list</a></p><p>陌陌试听榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=106&amp;page=1&amp;limit=20&amp;_ksTS=1542187181208_221&amp;callback=jsonp222&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=106&amp;page=1&amp;limit=20&amp;_ksTS=1542187181208_221&amp;callback=jsonp222&amp;r=rank/song-list</a></p><p>音乐风云榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=31&amp;page=1&amp;limit=20&amp;_ksTS=1542187197130_239&amp;callback=jsonp240&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=31&amp;page=1&amp;limit=20&amp;_ksTS=1542187197130_239&amp;callback=jsonp240&amp;r=rank/song-list</a></p><p>微信分享榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10011&amp;page=1&amp;limit=20&amp;_ksTS=1542187214047_257&amp;callback=jsonp258&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10011&amp;page=1&amp;limit=20&amp;_ksTS=1542187214047_257&amp;callback=jsonp258&amp;r=rank/song-list</a></p><p>微博分享榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10012&amp;page=1&amp;limit=20&amp;_ksTS=1542187231126_275&amp;callback=jsonp276&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10012&amp;page=1&amp;limit=20&amp;_ksTS=1542187231126_275&amp;callback=jsonp276&amp;r=rank/song-list</a></p><p>大虾试听榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10013&amp;page=1&amp;limit=20&amp;_ksTS=1542187251242_307&amp;callback=jsonp308&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10013&amp;page=1&amp;limit=20&amp;_ksTS=1542187251242_307&amp;callback=jsonp308&amp;r=rank/song-list</a></p><p>歌单收录榜</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10014&amp;page=1&amp;limit=20&amp;_ksTS=1542187271854_325&amp;callback=jsonp326&amp;r=rank/song-list" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=10014&amp;page=1&amp;limit=20&amp;_ksTS=1542187271854_325&amp;callback=jsonp326&amp;r=rank/song-list</a></p><p>歌曲详情页</p><p><a href="http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=1803270624&amp;_ksTS=1542188324143_92&amp;callback=jsonp93&amp;r=song/detail" target="_blank" rel="noopener">http://api.xiami.com/web?v=2.0&amp;app_key=1&amp;id=1803270624&amp;_ksTS=1542188324143_92&amp;callback=jsonp93&amp;r=song/detail</a></p><p>里面的listen_file就是真实播放地址，但是有些版权歌曲的listen_file为空。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;分析这些接口最方便的方法就是在浏览器里面打开移动端的页面，通常为m.xxx，如虾米的是m.xiami.com/。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog.duozhang.xin/wp-content/uploads/2018/11/WeChat3c398
      
    
    </summary>
    
      <category term="爬虫" scheme="https://next.duozhang.xin/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="music" scheme="https://next.duozhang.xin/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>利用fiddler分析酷狗音乐移动端接口</title>
    <link href="https://next.duozhang.xin/2018/11/06/%E5%88%A9%E7%94%A8fiddler%E5%88%86%E6%9E%90%E9%85%B7%E7%8B%97%E9%9F%B3%E4%B9%90%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8E%A5%E5%8F%A3/"/>
    <id>https://next.duozhang.xin/2018/11/06/利用fiddler分析酷狗音乐移动端接口/</id>
    <published>2018-11-06T15:53:19.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前用的获取kugou音乐top500接口是<a href="http://m.kugou.com/rank/info/?rankid=8888&amp;page=1&amp;json=true，" target="_blank" rel="noopener">http://m.kugou.com/rank/info/?rankid=8888&amp;page=1&amp;json=true，</a>但是最近用php的file_get_contents和curl请求这个接口均获取不到歌曲信息了，返回的字符串变成了这个： {“JS_CSS_DATE”:20130320,”kg_domain”:”http:\/\/m.kugou.com”,”src”:”http:\/\/downmobile.kugou.com\/promote\/package\/download\/channel=6”,”fr”:-2,”ver”:”v3”,”url”:”http%3A%2F%2Fm.kugou.com%2F%3Ffr%3D-2”,”code”:”C40B0241564447661C942281A23121AEF34BA502ACE293E3A08ECC8ECFF1CE45436F3AF911E8ED02”,”__Tpl”:”outsidetpl.html”} </p><p>看到后面有个outsidetpl.html估计是kugou加了限制，我尝试在curl里面加了header但还是不行，然后我用node的request模块试了一下，发现竟然可以获取歌曲信息，而且请求的时候也没有加header，这就有点想不通了。 既然node可以获取，突然想把这些接口封装成npm模块，说干就干，本篇内容先来把移动端的接口分析一波。</p><h2 id="设置fiddler"><a href="#设置fiddler" class="headerlink" title="设置fiddler"></a>设置fiddler</h2><p>fiddler<a href="https://www.telerik.com/download/fiddler" target="_blank" rel="noopener">下载地址</a></p><p><img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/RUTHIW7O9W8ZCOU@68Y.png" alt></p><p>打开fiddler，点击Tools-&gt;Options-Https，勾上这两个选项</p><p>然后切换到Connections，同样的操作，端口默认8888<img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/7VART171WU63C@FH4WI-300x204.png" alt></p><p>鼠标移到右上角的online图标，fiddler会弹出一个框，最下面一行是你的ip地址，记住这个地址<img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/467MD8JDT1UA47GRRP.png" alt></p><p>至此，fiddler设置完成，接下来设置手机</p><h2 id="设置手机"><a href="#设置手机" class="headerlink" title="设置手机"></a>设置手机</h2><p>手机先和电脑连接在同一wifi下，然后点击wifi详情，将代理切换为手动，输入刚才的ip和端口。</p><p><img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/4SWHYJ5W7Q_1J5-300x98.png" alt><img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/8XHK0D41Y_B501HQ_H-177x300.png" alt></p><p>然后打开手机浏览器，访问ip:端口，打开页面后，点击下方的链接安装证书，有些手机可能要单独的操作安装证书，这个请百度谷歌</p><p><img src="http://blog.duozhang.xin/wp-content/uploads/2018/11/ULM2W7U0L5YXAJ9SJR8-300x270.png" alt></p><p>然后就可以愉快的抓包了</p><h2 id="接口分析"><a href="#接口分析" class="headerlink" title="接口分析"></a>接口分析</h2><p> <strong>酷狗飙升榜</strong>： </p><p> [<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area\_code=1&amp;page=1&amp;volid=34535&amp;rankid=6666&amp;with\_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area\_code=1&amp;page=1&amp;volid=34535&amp;rankid=6666&amp;with\_res_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34535&amp;rankid=6666&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34535&amp;rankid=6666&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34535&amp;rankid=6666&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34535&amp;rankid=6666&amp;with_res_tag=1</a></p><p>)其中参数area_code、with_res_tag可不要，volid参数表示期数，省略获取的是最新的一期，所以必须省略，page和pagesize自行设置，其余参数最好加上，不然返回的歌曲列表会跟实际的不一样</p><p><strong>酷狗top500：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34533&amp;rankid=8888&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=2&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34533&amp;rankid=8888&amp;with_res_tag=1 </a></p><p>参数同上</p><p><strong>热门搜索：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/search/hot?count=20&amp;plat=0&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/search/hot?count=20&amp;plat=0&amp;with_res_tag=1</a></p><p><strong>歌曲搜索：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/search/song?showtype=14&amp;highlight=em&amp;pagesize=30&amp;tag_aggr=1&amp;tagtype=%E5%85%A8%E9%83%A8&amp;plat=0&amp;sver=5&amp;keyword=%E8%AE%B8%E5%B5%A9&amp;correct=1&amp;api_ver=1&amp;version=9068&amp;page=1&amp;area_code=1&amp;tag=1&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/search/song?showtype=14&amp;highlight=em&amp;pagesize=30&amp;tag_aggr=1&amp;tagtype=%E5%85%A8%E9%83%A8&amp;plat=0&amp;sver=5&amp;keyword=%E8%AE%B8%E5%B5%A9&amp;correct=1&amp;api_ver=1&amp;version=9068&amp;page=1&amp;area_code=1&amp;tag=1&amp;with_res_tag=1</a></p><p><strong>歌曲详情：</strong></p><p><a href="http://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&amp;hash=CB7EE97F4CC11C4EA7A1FA4B516A5D97（app的歌曲详情接口信息太少而且还有限制，所以这个最好用web端）" target="_blank" rel="noopener">http://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&amp;hash=CB7EE97F4CC11C4EA7A1FA4B516A5D97</a></p><p><a href="http://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&amp;hash=CB7EE97F4CC11C4EA7A1FA4B516A5D97（app的歌曲详情接口信息太少而且还有限制，所以这个最好用web端）" target="_blank" rel="noopener">（app的歌曲详情接口信息太少而且还有限制，所以这个最好用web端）</a></p><p><strong>酷狗专辑畅销榜：</strong></p><p>今日排行：</p><p><a href="http://zhuanjistatic.kugou.com/v3/albumRankingList/oneDay?appid=1005&amp;version=9068&amp;channel=130" target="_blank" rel="noopener">http://zhuanjistatic.kugou.com/v3/albumRankingList/oneDay?appid=1005&amp;version=9068&amp;channel=130 </a></p><p>本周排行：</p><p><a href="http://zhuanjistatic.kugou.com/v3/albumRankingList/sevenDays?appid=1005&amp;version=9068&amp;channel=130" target="_blank" rel="noopener">http://zhuanjistatic.kugou.com/v3/albumRankingList/sevenDays?appid=1005&amp;version=9068&amp;channel=130 </a></p><p>累计排行：</p><p><a href="http://zhuanjistatic.kugou.com/v3/albumRankingList/all?appid=1005&amp;version=9068&amp;channel=130" target="_blank" rel="noopener">http://zhuanjistatic.kugou.com/v3/albumRankingList/all?appid=1005&amp;version=9068&amp;channel=130</a></p><p><strong>由你音乐榜：</strong></p><p>本周实时榜：</p><p><a href="https://yobang.tencentmusic.com/unichartsapi/v1/songs/charts/dynamic?limit=100&amp;offset=0&amp;platform=kugou&amp;format=jsonp" target="_blank" rel="noopener">https://yobang.tencentmusic.com/unichartsapi/v1/songs/charts/dynamic?limit=100&amp;offset=0&amp;platform=kugou&amp;format=jsonp </a></p><p>往期榜单：</p><p><a href="https://yobang.tencentmusic.com/unichartsapi/v1/songs/charts/history/201807?limit=100&amp;offset=0&amp;platform=kugou" target="_blank" rel="noopener">https://yobang.tencentmusic.com/unichartsapi/v1/songs/charts/history/201807?limit=100&amp;offset=0&amp;platform=kugou</a></p><p><strong>网络红歌榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34527&amp;rankid=23784&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34527&amp;rankid=23784&amp;with_res_tag=1</a></p><p><strong>DJ热歌榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34534&amp;rankid=24971&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34534&amp;rankid=24971&amp;with_res_tag=1</a></p><p><strong>酷狗单曲畅销榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v5/rank/buycount?area_code=1&amp;pagesize=100&amp;page=1&amp;appid=1005&amp;type=day&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v5/rank/buycount?area_code=1&amp;pagesize=100&amp;page=1&amp;appid=1005&amp;type=day&amp;with_res_tag=1</a></p><p><strong>华语新歌榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34536&amp;rankid=31308&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34536&amp;rankid=31308&amp;with_res_tag=1</a></p><p><strong>欧美新歌榜：</strong></p><p>期数：</p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31310&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31310&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31310&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31310&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31310&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31310&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34538&amp;rankid=31310&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34538&amp;rankid=31310&amp;with_res_tag=1</a></p><p><strong>韩国新歌榜：</strong></p><p>期数：</p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31311&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31311&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34539&amp;rankid=31311&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34539&amp;rankid=31311&amp;with_res_tag=1</a></p><p><strong>日本新歌榜：</strong></p><p>期数：[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31312&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31312&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31312&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31312&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31312&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31312&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34537&amp;rankid=31312&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34537&amp;rankid=31312&amp;with_res_tag=1</a></p><p><strong>粤语新歌榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31313&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=31313&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34540&amp;rankid=31313&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34540&amp;rankid=31313&amp;with_res_tag=1</a></p><p><strong>酷狗分享榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21101&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21101&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21101&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21101&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21101&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21101&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34530&amp;rankid=21101&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34530&amp;rankid=21101&amp;with_res_tag=1</a></p><p><strong>腾讯音乐人原创榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=30972&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=30972&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=30972&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=30972&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=30972&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=30972&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34470&amp;rankid=30972&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34470&amp;rankid=30972&amp;with_res_tag=1</a></p><p><strong>梦想的声音第三季榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=0&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;rankid=34436&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=0&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;rankid=34436&amp;with_res_tag=1</a></p><p><strong>蒙面唱将猜猜猜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=0&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;rankid=34363&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=0&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;rankid=34363&amp;with_res_tag=1</a></p><p><strong>中国梦之声：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=0&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;rankid=34362&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=0&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;rankid=34362&amp;with_res_tag=1</a></p><p><strong>5sing音乐榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22603&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22603&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22603&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22603&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22603&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22603&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34526&amp;rankid=22603&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34526&amp;rankid=22603&amp;with_res_tag=1</a></p><p><strong>电音热歌榜</strong>：</p><p> <a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33160&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33160&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34486&amp;rankid=33160&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34486&amp;rankid=33160&amp;with_res_tag=1</a></p><p><strong>繁星音乐榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21335&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=21335&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34416&amp;rankid=21335&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34416&amp;rankid=21335&amp;with_res_tag=1</a></p><p><strong>古风金曲榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33161&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33161&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33161&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33161&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33161&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33161&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34475&amp;rankid=33161&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34475&amp;rankid=33161&amp;with_res_tag=1</a></p><p><strong>影视金曲榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33163&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33163&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34478&amp;rankid=33163&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34478&amp;rankid=33163&amp;with_res_tag=1</a></p><p><strong>ACG热歌榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33162&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33162&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33162&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33162&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33162&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33162&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34482&amp;rankid=33162&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34482&amp;rankid=33162&amp;with_res_tag=1</a></p><p><strong>粤语金曲榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33165&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33165&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33165&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33165&amp;with_res_tag=1</a></p><p>)</p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34481&amp;rankid=33165&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34481&amp;rankid=33165&amp;with_res_tag=1</a></p><p><strong>欧美金曲榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33166&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=33166&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34477&amp;rankid=33166&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34477&amp;rankid=33166&amp;with_res_tag=1</a></p><p><strong>美国BillBoard榜</strong>： </p><p> <a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4681&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4681&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34498&amp;rankid=4681&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34498&amp;rankid=4681&amp;with_res_tag=1</a></p><p><strong>英国单曲榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4680&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4680&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34525&amp;rankid=4680&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34525&amp;rankid=4680&amp;with_res_tag=1</a></p><p><strong>日本公信榜：</strong></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4673&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4673&amp;with_res_tag=1 </a></p><p><a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34488&amp;rankid=4673&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34488&amp;rankid=4673&amp;with_res_tag=1</a></p><p><strong>韩国M-net音乐榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4672&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4672&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4672&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4672&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4672&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=4672&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34529&amp;rankid=4672&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34529&amp;rankid=4672&amp;with_res_tag=1</a></p><p><strong>中国TOP排行榜：</strong></p><p>[<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22163&amp;with\_res\_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22163&amp;with\_res\_tag=1</a> ](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22163&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22163&amp;with_res_tag=1</a></p><p>)</p><p>[](<a href="http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22163&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/vol?ranktype=1&amp;plat=0&amp;rankid=22163&amp;with_res_tag=1</a></p><p>)<a href="http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34528&amp;rankid=22163&amp;with_res_tag=1" target="_blank" rel="noopener">http://mobilecdngz.kugou.com/api/v3/rank/song?version=9068&amp;ranktype=1&amp;plat=0&amp;pagesize=100&amp;area_code=1&amp;page=1&amp;volid=34528&amp;rankid=22163&amp;with_res_tag=1</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>之前一直以为酷狗移动端app和移动端h5页面用的是一套接口，即m.kugou.com开头的，结果发现并不是，app用的是mobilecdngz.kugou.com开头的地址。 而且app里面的歌曲更多一些，也更全一些。 写完都很晚了，明天还要上班那，最近还n个需求缠身，npm模块的事只能往后拖拖了。 还有网易云音乐、QQ音乐、虾米音乐这些。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前用的获取kugou音乐top500接口是&lt;a href=&quot;http://m.kugou.com/rank/info/?rankid=8888&amp;amp;page=1&amp;amp;json=true，&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http:/
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>vue-cli本地开发解决跨域问题</title>
    <link href="https://next.duozhang.xin/2018/11/02/vue-cli%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <id>https://next.duozhang.xin/2018/11/02/vue-cli本地开发解决跨域问题/</id>
    <published>2018-11-02T03:38:53.000Z</published>
    <updated>2018-11-16T03:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在我们使用vue-cli脚手架进行本地开发的时候，调用后台接口一般会出现跨域的问题，这个时候我们通过修改配置文件来临时解决，如果部署上线之后还存在跨域问题的话，最好的方法就是用<a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="noopener">常用的跨域解决方法</a>了。 打开config/index.js文件，插入如下代码： [code lang=”javascript”]</p><p>dev: {<br>    proxyTable: {<br>        ‘/api’: {<br>            target: ‘<a href="http://40.00.100.100:3002/&#39;,//设置你调用的接口域名和端口号" target="_blank" rel="noopener">http://40.00.100.100:3002/&#39;,//设置你调用的接口域名和端口号</a> 别忘了加http<br>            changeOrigin: true,<br>            pathRewrite: {<br>                ‘^/api’: ‘/‘<br>                //这里理解成用‘/api’代替target里面的地址，后面组件中我们掉接口时直接用api代替 比如我要调用’<a href="http://40.00.100.100:3002/user/add&#39;，直接写‘/api/user/add’即可" target="_blank" rel="noopener">http://40.00.100.100:3002/user/add&#39;，直接写‘/api/user/add’即可</a><br>            }<br>        }<br>    }<br>},</p><p>[/code]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在我们使用vue-cli脚手架进行本地开发的时候，调用后台接口一般会出现跨域的问题，这个时候我们通过修改配置文件来临时解决，如果部署上线之后还存在跨域问题的话，最好的方法就是用&lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/04/s
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://next.duozhang.xin/tags/vue/"/>
    
      <category term="vue-cli" scheme="https://next.duozhang.xin/tags/vue-cli/"/>
    
  </entry>
  
  <entry>
    <title>测试浏览器环境和Node环境中for和while的性能</title>
    <link href="https://next.duozhang.xin/2018/09/29/%E6%B5%8B%E8%AF%95%E6%B5%8F%E8%A7%88%E5%99%A8%E7%8E%AF%E5%A2%83%E5%92%8CNode%E7%8E%AF%E5%A2%83%E4%B8%ADfor%E5%92%8Cwhile%E7%9A%84%E6%80%A7%E8%83%BD/"/>
    <id>https://next.duozhang.xin/2018/09/29/测试浏览器环境和Node环境中for和while的性能/</id>
    <published>2018-09-29T02:43:09.000Z</published>
    <updated>2018-11-16T03:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天看某个项目的代码时发现一件让我好奇的事情，代码如下：</p><pre><code>while (i--) {  const key = keys[i]  if (process.env.NODE_ENV !== &apos;production&apos;) {    if (methods &amp;&amp; hasOwn(methods, key)) {      warn(        `Method &quot;${key}&quot; has already been defined as a data property.`,        vm      )    }  }</code></pre><p>因为平时for循环用多了，所以我的第一感觉是这里的while循环不会陷入死循环吗，然后就意识到i减到0时就相当于false不再执行了。 这时蹦出来一个想法：for和while谁的性能好呢？下面我分别在浏览器环境和Node环境测试一下 浏览器环境：chrome69.0.3497.100（正式版本） （64 位） Node环境：v8.11.3 平台：MacBook Pro (13-inch, 2017, Four Thunderbolt 3 Ports)10.13.6 操作系统：mac os 10.13.6</p><h2 id="浏览器环境"><a href="#浏览器环境" class="headerlink" title="浏览器环境"></a>浏览器环境</h2><p>我测试了for、while和do…while从0加到100000000（1亿）需要的时间，代码如下：</p><p>var max = 100000000<br>//for循环<br>;(function () {<br>    var test = i = 0<br>    console.time(‘for’)<br>    for (i=0; i&lt;max; i++){<br>        test++<br>    }<br>    console.timeEnd(‘for’)<br>})()<br>//while循环<br>;(function () {<br>    var test = i = 0<br>    console.time(‘while’)<br>    while (i&lt;max){<br>        test++<br>        i++<br>    }<br>    console.timeEnd(‘while’)<br>})()<br>//do…while循环<br>;(function () {<br>    var test = i = 0<br>    console.time(‘do…while’)<br>    do {<br>        test++<br>        i++<br>    } while (i&lt;max)</p><pre><code>console.timeEnd(&apos;do...while&apos;)</code></pre><p>})()</p><p>一共测试了5组，耗时如下表所示： [table id=1 /] 可以看出，while和do…while差距不大，for循环比二者多了20多毫秒，不过考虑到我测试的数据有点大，平常使用的话应该可以忽略不计。</p><h2 id="Node环境"><a href="#Node环境" class="headerlink" title="Node环境"></a>Node环境</h2><p>相同代码，也是测试了5组，耗时如下表所示： [table id=3 /] 三者的差别同样不是很大 有意思的点是目前的chrome优化的已经很好了，只比Node环境少了几十毫秒</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/jawil/blog/issues/2" target="_blank" rel="noopener">吹毛求疵的追求优雅高性能JavaScript</a></p><p><a href="https://juejin.im/entry/59390887ac502e006b169ae1" target="_blank" rel="noopener">JavaScript 循环性能比较</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天看某个项目的代码时发现一件让我好奇的事情，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;while (i--) {
  const key = keys[i]
  if (process.env.NODE_ENV !== &amp;apos;production&amp;apos;) {

      
    
    </summary>
    
      <category term="JavaScript" scheme="https://next.duozhang.xin/categories/JavaScript/"/>
    
    
      <category term="javascript" scheme="https://next.duozhang.xin/tags/javascript/"/>
    
      <category term="性能" scheme="https://next.duozhang.xin/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>axios请求后台获取不到cookie</title>
    <link href="https://next.duozhang.xin/2018/09/26/axios%E8%AF%B7%E6%B1%82%E5%90%8E%E5%8F%B0%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0cookie/"/>
    <id>https://next.duozhang.xin/2018/09/26/axios请求后台获取不到cookie/</id>
    <published>2018-09-26T10:41:35.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天跟后台同学联调时，发现后台获取不到cookie，打开控制台发现请求的header里面并没有cookie。 google之后发现，axios默认是不带cookie的，需要设置</p><pre><code>axios.defaults.withCredentials = true</code></pre><p>参考链接：<a href="https://github.com/PanJiaChen/vue-element-admin/issues/562" target="_blank" rel="noopener">https://github.com/PanJiaChen/vue-element-admin/issues/562</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天跟后台同学联调时，发现后台获取不到cookie，打开控制台发现请求的header里面并没有cookie。 google之后发现，axios默认是不带cookie的，需要设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;axios.defaults.withCredentials = 
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="axios" scheme="https://next.duozhang.xin/tags/axios/"/>
    
      <category term="vue" scheme="https://next.duozhang.xin/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>JS中的microtask和macrotask</title>
    <link href="https://next.duozhang.xin/2018/09/26/JS%E4%B8%AD%E7%9A%84microtask%E5%92%8Cmacrotask/"/>
    <id>https://next.duozhang.xin/2018/09/26/JS中的microtask和macrotask/</id>
    <published>2018-09-26T10:34:26.000Z</published>
    <updated>2018-11-16T03:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>JS是一门非阻塞的单线程语言，在执行过程中，如果遇到异步的代码，浏览器就会在其它线程中执行异步操作，然后将回调函数放到异步的队列中，等到执行栈中的代码执行完成之后，再放到执行栈中执行。 不同的任务源会被分配到不同的任务队列中，任务源可以分为两种：</p><ul><li>microtask：又称微任务，ES6规范中又称为jobs。包括process.nextTick、promise、Object.observe、MutationObserver</li><li>macrotask：又称宏任务，ES6规范中又称为task。包括setTimeout、setInterval、setImmediate、I/O, UI rendering</li></ul><p>一次事件循环的顺序是这样的：</p><ol><li>将macrotask中的任务放到执行栈中执行</li><li>执行栈为空，查询microtask任务</li><li>执行所有的microtask</li><li>更新并渲染界面</li><li>开始下一轮事件循环，将macrotask中的任务放到执行栈中执行</li></ol><h3 id="microtask的应用"><a href="#microtask的应用" class="headerlink" title="microtask的应用"></a>microtask的应用</h3><p>根据 HTML Standard，在每个 task 运行完以后，UI 都会重渲染，那么在 microtask 中就完成数据更新，当前 task 结束就可以得到最新的 UI 了。反之如果新建一个 task 来做数据更新，那么渲染就会进行两次。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JS是一门非阻塞的单线程语言，在执行过程中，如果遇到异步的代码，浏览器就会在其它线程中执行异步操作，然后将回调函数放到异步的队列中，等到执行栈中的代码执行完成之后，再放到执行栈中执行。 不同的任务源会被分配到不同的任务队列中，任务源可以分为两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="JavaScript" scheme="https://next.duozhang.xin/categories/JavaScript/"/>
    
    
      <category term="event loop" scheme="https://next.duozhang.xin/tags/event-loop/"/>
    
      <category term="javascript" scheme="https://next.duozhang.xin/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>service worker缓存和浏览器缓存</title>
    <link href="https://next.duozhang.xin/2018/09/23/service%20worker%E7%BC%93%E5%AD%98%E5%92%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98/"/>
    <id>https://next.duozhang.xin/2018/09/23/service worker缓存和浏览器缓存/</id>
    <published>2018-09-23T04:09:51.000Z</published>
    <updated>2018-11-16T03:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前在学PWA相关知识时涉及到service worker的缓存机制，当时就有点疑惑，这跟浏览器的缓存有啥区别呢？趁现在有空整理一下二者的区别。service worker本身很强大，详细内容请参考这两篇博客：<a href="https://github.com/youngwind/blog/issues" target="_blank" rel="noopener">https://github.com/youngwind/blog/issues</a>  <a href="https://www.zhangxinxu.com/wordpress/2017/07/service-worker-cachestorage-offline-develop/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2017/07/service-worker-cachestorage-offline-develop/</a> ，接下来先由浅入深，从浏览器缓存开始</p><h2 id="浏览器缓存"><a href="#浏览器缓存" class="headerlink" title="浏览器缓存"></a>浏览器缓存</h2><p>浏览器缓存分为强制缓存和协商缓存，我之前一篇博客介绍过，<a href="http://blog.duozhang.xin/index.php/2018/04/01/http%E7%9A%84%E5%BC%BA%E5%88%B6%E7%BC%93%E5%AD%98%E5%92%8C%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98/" target="_blank" rel="noopener">传送门</a> 缺点在于：</p><ul><li>当没有网络的时候，应用无法访问，因为 HTML 页面总得去服务器获取。</li><li>缓存不可编程，无法通过 JS 来精细地对缓存进行增删改查。</li></ul><h2 id="service-worker缓存"><a href="#service-worker缓存" class="headerlink" title="service worker缓存"></a>service worker缓存</h2><p>Service Workers 是谷歌 chrome 团队提出并大力推广的一项 web 技术。在 2015 年，它加入到 W3C 标准。Service workers 基本上充当应用同服务器之间的<strong>代理服务器</strong>，可以用于拦截请求，也就意味着可以在离线环境下响应请求，从而提供更好的离线体验。同时，它还可以接收服务器推送和后台同步 API。service worker所在的线程不是js所在的主线程，所以无法访问到window和document，但是可以使用self访问全局上下文。 使用service worker缓存技术先了解其生命周期 <img src="http://blog.duozhang.xin/wp-content/uploads/2018/09/20171227141105043-300x279.png" alt></p><ol><li>注册（register）当你的应用未注册过service worker，那么第一步就是注册；</li><li>安装（install）,注册完成之后，会触发install,在这一步我们可以进行文件缓存；</li><li>响应请求（fetch）,fetch用于拦截用户请求，并响应，返回Promise对象,成功安装service worker后，待用户下次再进入页面，返回已返回的文件；</li><li>更新（activate），当网站上当前页面被关闭，旧服务线程被终止。重新打开网页时，新服务工作线程取得控制权后，会触发activate事件。这一步我们可以清楚就版本缓存。</li></ol><p>实现方式如下：</p><blockquote><p>if (‘serviceWorker’ in navigator) { navigator.serviceWorker.register(‘/sw-test/sw.js’, { scope: ‘/sw-test/‘ }).then(function(reg) { if(reg.installing) { console.log(‘Service worker installing’); } else if(reg.waiting) { console.log(‘Service worker installed’); } else if(reg.active) { console.log(‘Service worker active’); } }).catch(function(error) { // registration failed console.log(‘Registration failed with ‘ + error); }); }</p></blockquote><p>sw.js</p><blockquote><p>var VERSION = ‘v1’;//一个存储空间 // 缓存 self.addEventListener(‘install’, function(event) { event.waitUntil( caches.open(VERSION).then(function(cache) { return cache.addAll([//需要缓存的文件 ‘/sw-test/‘, ‘/sw-test/index.html’, ‘/sw-test/style.css’, ‘/sw-test/app.js’, ‘/sw-test/image-list.js’, ‘/sw-test/star-wars-logo.jpg’, ‘/sw-test/gallery/bountyHunters.jpg’, ‘/sw-test/gallery/myLittleVader.jpg’, ‘/sw-test/gallery/snowTroopers.jpg’ ]); }) ); }); // 缓存更新 self.addEventListener(‘activate’, function(event) { event.waitUntil( caches.keys().then(function(cacheNames) { return Promise.all( cacheNames.map(function(cacheName) { // 如果当前版本和缓存版本不一致 if (cacheName !== VERSION) { return caches.delete(cacheName); } }) ); }) ); }); // 捕获请求并返回缓存数据 self.addEventListener(‘fetch’, function(event) { event.respondWith(caches.match(event.request).catch(function() { return fetch(event.request); }).then(function(response) { caches.open(VERSION).then(function(cache) { cache.put(event.request, response); }); return response.clone(); }).catch(function() { return caches.match(‘/sw-test/gallery/myLittleVader.jpg’); })); });</p></blockquote><h4 id="资源的更新"><a href="#资源的更新" class="headerlink" title="资源的更新"></a>资源的更新</h4><p>只能对sw.js文件进行更新，浏览器会请求 sw.js，然后将新旧 sw.js 进行字节对比，如果不一样，说明需要更新。因此，你能看到在 Demo 中，我们有一个 <strong>VERSION 字段，它不仅代表 sw.js 本身的版本，更代表整个应用的版本</strong>。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>相同点：</p><ul><li>都是缓存技术，可以用来缓存文件</li></ul><p>不同点：</p><ul><li>service worker会更改入口文件（如sw.js），每次更新都要改变sw.js，而且必须是https协议</li><li>service worker会新开一个线程，独立于javascript所在的主线程，但是可以通过self联系上下文</li><li>生命周期、可调用的 API 等等也有很大的不同</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前在学PWA相关知识时涉及到service worker的缓存机制，当时就有点疑惑，这跟浏览器的缓存有啥区别呢？趁现在有空整理一下二者的区别。service worker本身很强大，详细内容请参考这两篇博客：&lt;a href=&quot;https://github.com/youn
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="缓存" scheme="https://next.duozhang.xin/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>v-model为什么能双向绑定</title>
    <link href="https://next.duozhang.xin/2018/09/21/v-model%E4%B8%BA%E4%BB%80%E4%B9%88%E8%83%BD%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/"/>
    <id>https://next.duozhang.xin/2018/09/21/v-model为什么能双向绑定/</id>
    <published>2018-09-21T07:32:22.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用vue时，如果在input输入框中使用v-model是可以实现双向绑定的。表现为修改变量值，输入框的内容会改变，改变输入框中的内容时，变量值也会改变。但是vue官方文档和vue作者尤大都声明了vue是单向数据流，这又是怎么一回事呢。</p><h2 id="单向数据流和双向数据流"><a href="#单向数据流和双向数据流" class="headerlink" title="单向数据流和双向数据流"></a>单向数据流和双向数据流</h2><p>首先我们先弄清楚什么是单向数据流，什么是双向数据流。 单向数据流指只能从一个方向来修改状态。下图是单向数据流的官方示意图： <img src="http://blog.duozhang.xin/wp-content/uploads/2018/09/2017119163947045-300x203.png" alt> 在双向数据流中，Model（可以理解为状态的集合） 中可以修改自己或其他Model的状态， 用户的操作（如在输入框中输入内容）也可以修改状态。 这就容易导致一修改一个Model，可能会引起一连串的反应，这当然是开发者不愿意看到的。</p><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><p>接下来我们就来看看v-model，下面是官网的原话：</p><blockquote><p>你可以用 <code>v-model</code> 指令在表单 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 及 <code>&lt;select&gt;</code> 元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 <code>v-model</code> 本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。</p></blockquote><p>原来，v-model只是一个语法糖，里面包含了两部分的操作：v-bind和@input，前者绑定变量值，后者响应内容改变，两者也都是单向数据流，所以v-model跟vue的单向数据流并不冲突。 v-model不仅可以用于输入框，也可以用于输入类型的组件上，原理也是一样的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用vue时，如果在input输入框中使用v-model是可以实现双向绑定的。表现为修改变量值，输入框的内容会改变，改变输入框中的内容时，变量值也会改变。但是vue官方文档和vue作者尤大都声明了vue是单向数据流，这又是怎么一回事呢。&lt;/p&gt;
&lt;h2 id=&quot;单向数据流和
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://next.duozhang.xin/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>http的强制缓存和协商缓存</title>
    <link href="https://next.duozhang.xin/2018/04/01/http%E7%9A%84%E5%BC%BA%E5%88%B6%E7%BC%93%E5%AD%98%E5%92%8C%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98/"/>
    <id>https://next.duozhang.xin/2018/04/01/http的强制缓存和协商缓存/</id>
    <published>2018-04-01T01:32:23.000Z</published>
    <updated>2018-11-16T03:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>印象中的http缓存是客户端向浏览器发送请求，如果服务端没有改变的话就会返回304，但是发现某网站每次刷新之后状态码都是200，这是什么鬼，难道他们没有用缓存策略？事情当然没那么简单。</p><h2 id="浏览器缓存"><a href="#浏览器缓存" class="headerlink" title="浏览器缓存"></a>浏览器缓存</h2><p>首先来看看缓存的定义：</p><blockquote><p>浏览器缓存(Brower Caching)是浏览器在本地磁盘对用户最近请求过的文档进行存储，当访问者再次访问同一页面时，浏览器就可以直接从本地磁盘加载文档。</p></blockquote><p>优点在于：</p><ul><li>减少了冗余的数据传输</li><li>减少了服务器的负担，大大提升了网站的性能</li><li>加快了客户端加载网页的速度</li></ul><p>浏览器缓存分为强制缓存（也叫强缓存）和协商缓存（弱缓存）</p><h2 id="强制缓存"><a href="#强制缓存" class="headerlink" title="强制缓存"></a>强制缓存</h2><p>强制缓存是利用http头中的<code>Expires</code>和<code>Cache-Control</code>两个字段来控制的，用来表示资源的缓存时间。强制缓存不会向服务器发送请求，直接从缓存中读取资源，在chrome控制台的network选项中可以看到该请求返回200的状态码。如果cache-control与expires同时存在的话，cache-control的优先级高于expires</p><h4 id="Expires"><a href="#Expires" class="headerlink" title="Expires"></a>Expires</h4><p>这是http1.0时的规范；它的值为一个绝对时间的GMT格式的时间字符串，如Mon, 10 Jun 2015 21:31:12 GMT，如果发送请求的时间在expires之前，那么本地缓存始终有效，否则就会发送请求到服务器来获取资源</p><h4 id="Cache-Control"><a href="#Cache-Control" class="headerlink" title="Cache-Control"></a>Cache-Control</h4><p>这是http1.1时出现的header信息，主要是利用该字段的max-age值来进行判断，它是一个相对值；资源第一次的请求时间和Cache-Control设定的有效期，计算出一个资源过期时间，再拿这个过期时间跟当前的请求时间比较，如果请求时间在过期时间之前，就能命中缓存，否则就不行；cache-control除了该字段外，还有下面几个比较常用的设置值：</p><ul><li>no-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在ETag，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。</li><li>no-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。</li><li>public：可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器。</li><li>private：只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。</li></ul><h2 id="协商缓存"><a href="#协商缓存" class="headerlink" title="协商缓存"></a>协商缓存</h2><p>协商缓存都是由服务器来确定缓存资源是否可用的，所以客户端与服务器端要通过某种标识来进行通信，从而让服务器判断请求资源是否可以缓存访问，这主要涉及到下面两组header字段，<strong>这两组搭档都是成对出现的，即第一次请求的响应头带上某个字段（Last-Modified或者Etag），则后续请求则会带上对应的请求字段（If-Modified-Since或者If-None-Match），若响应头没有Last-Modified或者Etag字段，则请求头也不会有对应的字段</strong>。</p><h4 id="Last-Modified-If-Modified-Since"><a href="#Last-Modified-If-Modified-Since" class="headerlink" title="Last-Modified/If-Modified-Since"></a><strong>Last-Modified/If-Modified-Since</strong></h4><p>二者的值都是GMT格式的时间字符串，具体过程：</p><ul><li>浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，在respone的header加上Last-Modified的header，这个header表示这个资源在服务器上的最后修改时间</li><li>浏览器再次跟服务器请求这个资源时，在request的header上加上If-Modified-Since的header，这个header的值就是上一次请求时返回的Last-Modified的值</li><li>服务器再次收到资源请求时，根据浏览器传过来If-Modified-Since和资源在服务器上的最后修改时间判断资源是否有变化，如果没有变化则返回304 Not Modified，但是不会返回资源内容；如果有变化，就正常返回资源内容。当服务器返回304 Not Modified的响应时，response header中不会再添加Last-Modified的header，因为既然资源没有变化，那么Last-Modified也就不会改变，这是服务器返回304时的response header</li><li>浏览器收到304的响应后，就会从缓存中加载资源</li><li>如果协商缓存没有命中，浏览器直接从服务器加载资源时，Last-Modified的Header在重新加载的时候会被更新，下次请求时，If-Modified-Since会启用上次返回的Last-Modified值</li></ul><h4 id="Etag-If-None-Match"><a href="#Etag-If-None-Match" class="headerlink" title="Etag/If-None-Match"></a><strong>Etag/If-None-Match</strong></h4><p>这两个值是由服务器生成的每个资源的唯一标识字符串，只要资源有变化就这个值就会改变；其判断过程与<strong>Last-Modified/If-Modified-Since</strong>类似，与Last-Modified不一样的是，当服务器返回304 Not Modified的响应时，由于ETag重新生成过，response header中还会把这个ETag返回，即使这个ETag跟之前的没有变化。</p><h2 id="用户行为与缓存"><a href="#用户行为与缓存" class="headerlink" title="用户行为与缓存"></a>用户行为与缓存</h2><p><img src="http://blog.duozhang.xin/wp-content/uploads/2018/09/408483-20160525202949975-1541314356-300x96.png" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>强制缓存的优先级会高于协商缓存</li><li>强制缓存会返回状态码200，协商缓存会返回状态码304（满足缓存条件下）</li><li>强制缓存不会与服务器通信，协商缓存需要再通信一下</li><li>强制缓存下也可以通过no-cache来决定是否使用协商缓存</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;印象中的http缓存是客户端向浏览器发送请求，如果服务端没有改变的话就会返回304，但是发现某网站每次刷新之后状态码都是200，这是什么鬼，难道他们没有用缓存策略？事情当然没那么简单。&lt;/p&gt;
&lt;h2 id=&quot;浏览器缓存&quot;&gt;&lt;a href=&quot;#浏览器缓存&quot; class=&quot;h
      
    
    </summary>
    
      <category term="HTTP" scheme="https://next.duozhang.xin/categories/HTTP/"/>
    
    
      <category term="http" scheme="https://next.duozhang.xin/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>CI框架配置QQ邮箱发送邮件</title>
    <link href="https://next.duozhang.xin/2018/03/07/CI%E6%A1%86%E6%9E%B6%E9%85%8D%E7%BD%AEQQ%E9%82%AE%E7%AE%B1%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>https://next.duozhang.xin/2018/03/07/CI框架配置QQ邮箱发送邮件/</id>
    <published>2018-03-07T06:06:32.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>配置：</strong></p><p>$config[‘email_config’][‘protocol’] = ‘smtp’;<br>$config[‘email_config’][‘smtp_host’] = ‘smtp.qq.com’;<br>$config[‘email_config’][‘smtp_user’] = <a href="mailto:&#39;***@qq.com" target="_blank" rel="noopener">&#39;***@qq.com</a>‘;<br>$config[‘email_config’][‘smtp_pass’] = ‘***’;//授权码，不是QQ密码，下面有介绍<br>$config[‘email_config’][‘smtp_port’] = 465;<br>$config[‘email_config’][‘smtp_crypto’] = ‘ssl’;<br>$config[‘email_config’][‘charset’] = ‘utf-8’;<br>$config[‘email_config’][‘wordwrap’] = TRUE;<br>$config[‘email_config’][‘mailtype’] = ‘html’;<br>$config[‘email_config’][‘crlf’] = “\r\n”;<br>$config[‘email_config’][‘newline’] = “\r\n”;//必须是双引号</p><p><strong>使用：</strong></p><p>$this-&gt;load-&gt;library(‘email’);<br>$config = $this-&gt;config-&gt;item(‘email_config’);<br>$this-&gt;email-&gt;initialize($config);<br>$this-&gt;email-&gt;from(<a href="mailto:&#39;***@qq.com" target="_blank" rel="noopener">&#39;***@qq.com</a>‘, ‘<strong><em>‘); //发送方<br>$this-&gt;email-&gt;to(</em></strong>); //接收方<br>$this-&gt;email-&gt;subject(<strong><em>); //主题<br>$this-&gt;email-&gt;message(</em></strong>); //邮件内容<br>$this-&gt;email-&gt;attach(***); //附件<br>$this-&gt;email-&gt;send(); //发送</p><p><strong>注意事项：</strong><br>1、密码不能填QQ密码，要在QQ邮箱的设置-&gt;账户-&gt;服务里面开启IMAP/SMTP服务，填写生成的授权码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;配置：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$config[‘email_config’][‘protocol’] = ‘smtp’;&lt;br&gt;$config[‘email_config’][‘smtp_host’] = ‘smtp.qq.com’;&lt;br&gt;$co
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CI" scheme="https://next.duozhang.xin/tags/CI/"/>
    
  </entry>
  
  <entry>
    <title>elementui选择器多选时遇到的问题</title>
    <link href="https://next.duozhang.xin/2017/12/25/elementui%E9%80%89%E6%8B%A9%E5%99%A8%E5%A4%9A%E9%80%89%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://next.duozhang.xin/2017/12/25/elementui选择器多选时遇到的问题/</id>
    <published>2017-12-25T09:20:03.000Z</published>
    <updated>2018-11-16T03:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近做一个需求，ui使用的是elementui，样式如下所示： <img src="http://blog.studing.xyz/wp-content/uploads/2017/12/美信图片20171225171200-300x22.jpg" alt> 可以对表格中的每一条数据进行编辑，但是进入编辑页面时选择器会默认选中，但是会有一个问题，选择器显示的是属性的id，并不是属性名，而且下拉框中也没有选中的效果，而且如果是单选的话是正常的，只有多选情况下有问题。 解决方式：elementui选择器的默认值必须是整数型，我从数据库获取之后得到的是字符串，所以不能实现默认选择，将其转为整数型就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近做一个需求，ui使用的是elementui，样式如下所示： &lt;img src=&quot;http://blog.studing.xyz/wp-content/uploads/2017/12/美信图片20171225171200-300x22.jpg&quot; alt&gt; 可以对表格中的每
      
    
    </summary>
    
      <category term="JavaScript" scheme="https://next.duozhang.xin/categories/JavaScript/"/>
    
    
      <category term="vue" scheme="https://next.duozhang.xin/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>开发中使用v-show与v-if的心得</title>
    <link href="https://next.duozhang.xin/2017/12/22/%E5%BC%80%E5%8F%91%E4%B8%AD%E4%BD%BF%E7%94%A8v-show%E4%B8%8Ev-if%E7%9A%84%E5%BF%83%E5%BE%97/"/>
    <id>https://next.duozhang.xin/2017/12/22/开发中使用v-show与v-if的心得/</id>
    <published>2017-12-22T02:05:00.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近做一个需求，使用vue进行开发，因为不是很复杂，所以就没有使用vue-router，tab页切换选择用v-show来实现，每个tab是一个vue组件。但是调试时发现一个问题，子组件的mounted、created这些并不会触发。 官方文档是这样介绍的： <img src="http://blog.studing.xyz/wp-content/uploads/2017/12/美信图片20171222095022-300x172.jpg" alt> v-show只是简单的基于css进行切换，所以初始渲染完后就不再再渲染，子组件的那些钩子函数也就不起作用了。 而v-if是真正的条件渲染，在切换过程中事件监听器和子组件适当的被销毁和重建。 我这个需求在切换tab时要重新加载数据，所以要使用v-if，切换时重新渲染子组件。 所以使用v-if好处是会重新渲染，v-show的好处是只需要渲染一次，可以根据使用场景来决定使用v-show或者v-if。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近做一个需求，使用vue进行开发，因为不是很复杂，所以就没有使用vue-router，tab页切换选择用v-show来实现，每个tab是一个vue组件。但是调试时发现一个问题，子组件的mounted、created这些并不会触发。 官方文档是这样介绍的： &lt;img src
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://next.duozhang.xin/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>phpstorm多个标签tab换行展示</title>
    <link href="https://next.duozhang.xin/2017/12/18/phpstorm%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BEtab%E6%8D%A2%E8%A1%8C%E5%B1%95%E7%A4%BA/"/>
    <id>https://next.duozhang.xin/2017/12/18/phpstorm多个标签tab换行展示/</id>
    <published>2017-12-18T02:29:45.000Z</published>
    <updated>2018-11-16T03:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天请教老大问题时发现老大的phpstorm的标签页竟然会换行展示， 因为我的标签页一直是默认的单行，最多展示10个。回到座位后百度了一番，发现只需要在标签页上右键，找到tabs placement，取消掉show tabs in single row即可 <img src="http://blog.studing.xyz/wp-content/uploads/2017/12/美信图片20171218102549-237x300.jpg" alt> 而且还可以在settings-&gt;editor-&gt;editor tab中设置其他的一些属性，只能说phpstorm很强大，只有自己想不到的，没有它做不到的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天请教老大问题时发现老大的phpstorm的标签页竟然会换行展示， 因为我的标签页一直是默认的单行，最多展示10个。回到座位后百度了一番，发现只需要在标签页上右键，找到tabs placement，取消掉show tabs in single row即可 &lt;img src
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="IDE" scheme="https://next.duozhang.xin/tags/IDE/"/>
    
  </entry>
  
  <entry>
    <title>优化phpstorm很卡的问题</title>
    <link href="https://next.duozhang.xin/2017/12/08/%E4%BC%98%E5%8C%96phpstorm%E5%BE%88%E5%8D%A1%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://next.duozhang.xin/2017/12/08/优化phpstorm很卡的问题/</id>
    <published>2017-12-08T07:12:55.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1、修改JAVA虚拟机参数</strong> 点击Help-&gt;Edit Custom VM Options…在末尾添加 <code>-Dawt.usesystemAAFontSettings=lcd -Dawt.java2d.opengl=true</code> <img src="http://blog.studing.xyz/wp-content/uploads/2017/12/15127155201-201x300.png" alt> 使用硬件加速 <strong>2、Power Save Mode 开启节能模式</strong> <img src="http://blog.studing.xyz/wp-content/uploads/2017/12/微信图片_20171208145418-300x171.png" alt> 想开启节能模式的话这里可以点上 <strong>3、禁用语法检查</strong> 将上图中的滑块滑到None，不过第2，3种方法不建议这么搞，除非使用起来特别卡 <strong>4、关掉不用的插件</strong> <img src="http://blog.studing.xyz/wp-content/uploads/2017/12/微信图片_20171208150426-300x207.png" alt> <strong>5、升级电脑硬件</strong> 我之间电脑内存8G，打开phpstorm没多久就卡的想砸了电脑，后来换了台16G的才不卡。 <strong>6、将node_modules或其他不常打开的文件夹不设置索引</strong> 右键-&gt;Mark Directory as-&gt;Excluded 想了一下，还是写上了…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1、修改JAVA虚拟机参数&lt;/strong&gt; 点击Help-&amp;gt;Edit Custom VM Options…在末尾添加 &lt;code&gt;-Dawt.usesystemAAFontSettings=lcd -Dawt.java2d.opengl=true&lt;/
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="IDE" scheme="https://next.duozhang.xin/tags/IDE/"/>
    
      <category term="phpstorm" scheme="https://next.duozhang.xin/tags/phpstorm/"/>
    
  </entry>
  
  <entry>
    <title>前端预览pdf、pdf转图片、生成pdf方法总结</title>
    <link href="https://next.duozhang.xin/2017/12/05/%E5%89%8D%E7%AB%AF%E9%A2%84%E8%A7%88pdf%E3%80%81pdf%E8%BD%AC%E5%9B%BE%E7%89%87%E3%80%81%E7%94%9F%E6%88%90pdf%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>https://next.duozhang.xin/2017/12/05/前端预览pdf、pdf转图片、生成pdf方法总结/</id>
    <published>2017-12-05T03:46:53.000Z</published>
    <updated>2018-11-16T03:35:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>前端预览pdf文件既可以很简单，也可以很复杂。最简单的做法是直接打开文件地址，借助浏览器帮我们预览文件，但有些情况是在页面某个位置上预览pdf或者将pdf转换成图片。下面总结了一些前端预览pdf、pdf转图片以及生成pdf的方法。 <strong>一、预览PDF</strong> <strong>1、直接打开文件地址</strong> 使用方法：在地址栏中输入文件地址或者借助iframe、embed、object这几个标签 优点：简单 缺点：部分安卓浏览器不支持，甚至安卓版的chrome浏览器 <strong>2、借助flash显示pdf</strong> 使用方法：将pdf转换成swf格式 缺点：blablabla…….. <strong>3、借助插件显示pdf</strong> <strong><a href="http://jquery.malsup.com/media/" target="_blank" rel="noopener">jquery.media.js</a></strong> 原理：该插件主要是借助iframe，同时生成适合不同类型多媒体文件播放的Object对象，起到解析翻译的过程，从而达到多媒体播放的效果。转化过程是在客户端浏览器中实现，所以打开网页到出现播放器之间存在时间差。 <img src="http://km.midea.com/uploads/imgs/ba22a896c668.png" alt="alt"> <img src="http://km.midea.com/uploads/imgs/f281d9eda0bb.png" alt="alt"> 使用方法：</p><pre><code>$(&apos;#media&apos;).media()</code></pre><p>优点：使用简单 缺点：可以自己引入iframe，多此一举 <strong><a href="https://pdfobject.com/" target="_blank" rel="noopener">pdfobject.js</a></strong> 原理：PDFObject并不是一个PDF渲染工具，它是通过&lt; embed &gt;标签实现PDF预览 <img src="http://km.midea.com/uploads/imgs/5ef9ced411de.png" alt="alt"> 使用方法：</p><pre><code>if(PDFObject.supprotsPDFs){    PDFObject.embed(&apos;pdfUrl&apos;, &apos;#id&apos;);}</code></pre><p>优点：使用简单 缺点：多此一举 <strong><a href="http://mozilla.github.io/pdf.js/" target="_blank" rel="noopener">pdf.js</a></strong> 原理：PDF.js是一个由HTML5建立的PDF阅读器。依托开源社区驱动和Mozilla实验室的技术支持。目标是建立一个通用的，基于web的解析和渲染PDF文件的平台，包含两个库，pdf.js负责API解析，pdf.worker.js负责核心解析 使用方法：</p><pre><code>PDFJS.getdocument(url).then(function(pdf){    pdf.getPage(pageNo).then(function(page){        .......        page.render(...)})})</code></pre><p>优点：PC和移动端都兼容，而且可以使用canvas的toDataURL方法导出base64格式的图片 缺点：使用麻烦，要设置一堆的属性，文件非常非常庞大，而且还可能会遇到跨域的麻烦 <strong>二、PDF转图片（PHP后台）</strong> <strong>1、pdf.js</strong> 使用方法：</p><pre><code>var imgSrc = canvas.toDataURL(&apos;image/png&apos;);$(&apos;#img&apos;).attr(&apos;src&apos;, imgSrc);</code></pre><p>优点：使用简单 缺点：pdf.js和pdf.worker.js文件体积太大，加载缓慢 <strong>2、<a href="http://php.net/manual/en/book.imagick.php" target="_blank" rel="noopener">imagick</a></strong> ImageMagick是一套功能强大、稳定而且免费的工具集和开发包，可以用来读、写和处理超过185种基本格式的图片文件，包括流行的TIFF, JPEG, GIF, PNG, PDF以及PhotoCD等格式。利用ImageMagick，你可以根据web应用程序的需要动态生成图片, 还可以对一个（或一组）图片进行改变大小、旋转、锐化、减色或增加特效等操作，并将操作的结果以相同格式或其它格式保存。 使用这个扩展可以使PHP具备和ImageMagick相同的功能 使用方法：</p><pre><code>function pdf2Img($pdf, $path)    {        if (!extension_loaded(&apos;imagick&apos;)){            echo &apos;error&apos;;            return false;        }        if (!file_exists($pdf)){            echo &apos;文件不存在&apos;.$pdf;            return false;        }        if (!is_dir($path)){            echo &apos;地址不存在&apos;;            return false;        }        $magic = new imagick();        $magic-&gt;setResolution(120, 120);        $magic-&gt;setCompressionQuality(100);        $magic-&gt;readImage($pdf);        foreach ($magic as $key =&gt; $value) {            $value-&gt;setImageFormat(&apos;png&apos;);            $fileName = $path.&apos;/&apos;.md5($key.time()).&apos;.png&apos;;            if ($value-&gt;writeImage($fileName)==true){                $result[] = $fileName;            }        }        return $result;    }</code></pre><p>优点：在后台转换，不存在兼容性问题 缺点：转换效率很慢很慢，不推荐在请求时转换 <strong>3、借助无头浏览器的截屏功能</strong> <strong><a href="http://phantomjs.org/" target="_blank" rel="noopener">phantomjs</a></strong> 一个基于webkit内核的无头浏览器，即没有UI界面，即它就是一个浏览器，只是其内的点击、翻页等人为相关操作需要程序设计实现 使用方法：</p><pre><code>var webpage = require(&apos;webpage&apos;);var page = webpage.create();page.open(&apos;https://static.studing.xyz/pdf/66.pdf&apos;, function(status) {    var data;    console.log(new Date())    if(status === &apos;fail&apos;) {        console.log(&apos;fail&apos;);    } else {        page.render(&apos;1.png&apos;);    }    page.close();    phantom.exit();})</code></pre><p>执行完后发现打印出了fail，后来地址改为<a href="https://studing.xyz/pdf/iframe" target="_blank" rel="noopener">https://studing.xyz/pdf/iframe</a> ，使用iframe加载pdf，但是截的图并没有显示iframe的内容，一开始怀疑是pdf还没渲染出来，但是加个定时器1分钟还是没有显示。 <strong>puppeteer</strong> Puppeteer是一个node库，他提供了一组用来操纵Chrome的API，有点类似于PhantomJS，但Puppeteer是Chrome官方团队进行维护的，前景更好。 使用方法：</p><pre><code>const puppeteer = require(&apos;puppeteer&apos;);async function run() {  const browser = await puppeteer.launch();  const page = await browser.newPage();  await page.goto(&apos;https://studing.xyz/pdf/iframe&apos;);  await page.screenshot({path: &apos;3.png&apos;});  browser.close();}run();</code></pre><p>但是截的图也没有iframe的内容 所以借助无头浏览器的截屏功能转换成图片应该不可行 <strong>三、生成PDF</strong> <strong>1、js生成</strong> <a href="https://parall.ax/products/jspdf" target="_blank" rel="noopener">jspdf.js</a> <a href="http://pdfmake.org/" target="_blank" rel="noopener">pdfmake.js</a> <a href="http://phantomjs.org/" target="_blank" rel="noopener">phantomjs</a> <a href="https://juejin.im/entry/59ad6c4f5188250f4850dccc" target="_blank" rel="noopener">pupeteer</a> <strong>2、php生成</strong> <a href="http://www.pdflib.com/" target="_blank" rel="noopener">pdflib</a> <a href="http://www.fpdf.org/" target="_blank" rel="noopener">fpdf</a> <a href="https://wkhtmltopdf.org/" target="_blank" rel="noopener">wkhtmltopdf</a> <a href="http://www.mpdf1.com/mpdf/index.php" target="_blank" rel="noopener">mpdf</a> <strong>四、总结</strong> 如果只是查看pdf，直接打开文件地址就行，但是安卓部分浏览器不支持，包括chrome安卓版，会弹出下载提示。PC和IOS均支持预览 如果想动态展示pdf，pc可以使用iframe之类的标签，或者引入pdf.js插件；安卓可以使用pdf.js，但是这个插件很大很大，能显著的拖慢页面的加载速度，即使压缩之后 如果想将pdf转换成图片，可以先使用pdf.js渲染到canvas，然后使用toDataURL转换成图片 如果想生成pdf，可以使用jspdf.js，使用起来比较方便 所以最好的方法是让后台返回pdf缩略图，如果一定要预览的话可以考虑pdf.js，但要注意跨域的问题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前端预览pdf文件既可以很简单，也可以很复杂。最简单的做法是直接打开文件地址，借助浏览器帮我们预览文件，但有些情况是在页面某个位置上预览pdf或者将pdf转换成图片。下面总结了一些前端预览pdf、pdf转图片以及生成pdf的方法。 &lt;strong&gt;一、预览PDF&lt;/stro
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://next.duozhang.xin/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="pdf" scheme="https://next.duozhang.xin/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>CI框架定义全局变量</title>
    <link href="https://next.duozhang.xin/2017/11/08/CI%E6%A1%86%E6%9E%B6%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/"/>
    <id>https://next.duozhang.xin/2017/11/08/CI框架定义全局变量/</id>
    <published>2017-11-08T05:20:33.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近自己鼓捣一个小作品，想把引用静态文件的url赋给一个全局变量，这样不仅MVC的文件都可以用，而且地址修改也比较方便，但是用了网上的方法发现都会报Unable to load the requested class：这个错误，后来发现是文件名大小写导致的，所以完整的方法是这样的： 1、在applacition/libraries目录下新建一个Globals.php（注意这里头字母大写），变量如果在这里定义，就可以跳过第2步了。</p><blockquote><p>&lt;?php defined(‘BASEPATH’) OR exit(‘No direct script access allowed’); class Globals { function __construct($config = array() ){ foreach ($config as $key =&gt; $value) { $data[$key] = $value; } $CI =&amp; get_instance();//这一行必须加 $CI-&gt;load-&gt;vars($data); } }</p></blockquote><p>2、在applation/config目录下新建一个globals.php（注意这里头字母小写）</p><blockquote><p>&lt;?php defined(‘BASEPATH’) OR exit(‘No direct script access allowed’); $config[‘static_url’] = “”;</p></blockquote><p>3、在applation/config/autoload.php文件里面修改，自动加载Globals类</p><blockquote><p>$autoload[‘libraries’] = array(‘Globals’);</p></blockquote><p>4、然后就可以全局使用$static_url了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近自己鼓捣一个小作品，想把引用静态文件的url赋给一个全局变量，这样不仅MVC的文件都可以用，而且地址修改也比较方便，但是用了网上的方法发现都会报Unable to load the requested class：这个错误，后来发现是文件名大小写导致的，所以完整的方法是
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://next.duozhang.xin/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>scrapy xpath匹配文本过滤掉空白字符</title>
    <link href="https://next.duozhang.xin/2017/09/27/scrapy%20xpath%E5%8C%B9%E9%85%8D%E6%96%87%E6%9C%AC%E8%BF%87%E6%BB%A4%E6%8E%89%E7%A9%BA%E7%99%BD%E5%AD%97%E7%AC%A6/"/>
    <id>https://next.duozhang.xin/2017/09/27/scrapy xpath匹配文本过滤掉空白字符/</id>
    <published>2017-09-27T05:21:22.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用xpath匹配文本时遇到空白字符会出现下面这样形式： \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ 可以借助xpath的normalize-space函数过滤掉。 官方解释是：通过去掉前导和尾随空白并使用单个空格替换一系列空白字符，使空白标准化。如果不使用改函数，上下文节点的字符串值将标准化并返回。 <a href="https://stackoverflow.com/questions/35288184/strip-n-t-r-in-scrapy" target="_blank" rel="noopener">https://stackoverflow.com/questions/35288184/strip-n-t-r-in-scrapy</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用xpath匹配文本时遇到空白字符会出现下面这样形式： \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ 可以借助xpath的normalize-space函数过滤掉。 官方解释是：通过去掉前导和尾随空白并使用单个空格替换一系列空白字符，使空
      
    
    </summary>
    
      <category term="爬虫" scheme="https://next.duozhang.xin/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="https://next.duozhang.xin/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>setTimeout(0)的作用</title>
    <link href="https://next.duozhang.xin/2017/07/27/settimeout(0)%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <id>https://next.duozhang.xin/2017/07/27/settimeout(0)的作用/</id>
    <published>2017-07-27T05:23:59.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>可以将该条语句放到队列的末尾。如 alert(‘1’); setTimeout(“alert(‘2’)”,0); alert(‘3’); alert(‘4’); alert(‘5’); 依次弹出1,3,4,5,2. 在开发中，如果某个事件发生在子元素，然后冒泡到父元素，那么子元素的事件回调函数会早于父元素，所以我们就需要引入setTimeout(fn,0)，先执行父元素的事件回调函数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以将该条语句放到队列的末尾。如 alert(‘1’); setTimeout(“alert(‘2’)”,0); alert(‘3’); alert(‘4’); alert(‘5’); 依次弹出1,3,4,5,2. 在开发中，如果某个事件发生在子元素，然后冒泡到父元素，那么
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="https://next.duozhang.xin/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>jquery中的$(this)</title>
    <link href="https://next.duozhang.xin/2017/06/08/jquery%E4%B8%AD%E7%9A%84$(this)/"/>
    <id>https://next.duozhang.xin/2017/06/08/jquery中的$(this)/</id>
    <published>2017-06-08T05:24:54.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近做一个项目中遇到一件很奇怪的事，列表内容改变后点击相同位置使用$(this).data()获取属性值时，得到的结果是改变之前的属性值。然后我打印$(this).data(‘title’)和$(this)的值，结果如下图所示 <img src="http://imglf2.nosdn.127.net/img/OW9PR0QwaGpuTzgxcTVjUVV1Y29xWnI1TjhyeURsV2dmZXBGekExR2hZbmowV3JiR3NtaGtBPT0.png?=imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2" alt> $(this).data(‘title’)的值还是上一次的结果，而$(this)显示的是li所在的dom结构，并且内容已经改变了。 初步怀疑是jQuery的data方法造成的，所以我用了js的this.dataset方法再打印一次，结果如下图所示： <img src="http://imglf1.nosdn.127.net/img/OW9PR0QwaGpuTzgxcTVjUVV1Y29xVDRDWUREdmppR0Rza2tKUEJzWEZwVTdiVEEwRk9aNnVBPT0.png?=imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2" alt> 可以看到，用js的方法获取到的结果是正确的，所以，问题就出在了jq的data上面。 <img src="http://imglf2.nosdn.127.net/img/OW9PR0QwaGpuTzgxcTVjUVV1Y29xVkxoMC80QjdzYkNqT3dvaTBubm1hZVRFNGJtTEk1MzhBPT0.png?=imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2" alt> 这是jquery官网对data的介绍：存储与匹配元素相关联的任意数据，或返回匹配元素集合中第一个元素的命名数据存储中的值。 所以造成问题的原因应该是jq存储了data(‘title’)的属性值，下次再读取的时候返回了相同的属性值。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近做一个项目中遇到一件很奇怪的事，列表内容改变后点击相同位置使用$(this).data()获取属性值时，得到的结果是改变之前的属性值。然后我打印$(this).data(‘title’)和$(this)的值，结果如下图所示 &lt;img src=&quot;http://imglf2
      
    
    </summary>
    
      <category term="前端" scheme="https://next.duozhang.xin/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://next.duozhang.xin/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="jquery" scheme="https://next.duozhang.xin/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>django+python3下的mysqldb解决方案</title>
    <link href="https://next.duozhang.xin/2017/05/30/django+python3%E4%B8%8B%E7%9A%84mysqldb%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://next.duozhang.xin/2017/05/30/django+python3下的mysqldb解决方案/</id>
    <published>2017-05-30T05:26:02.000Z</published>
    <updated>2018-11-16T02:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>python3版本不支持mysqldb，导致django不能连接mysql，解决方法是使用mysqlclient。 在windows平台上，先到这个网站下载对应版本的whl文件 <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient" target="_blank" rel="noopener">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient</a> cp表示的是python的版本，比如我的是python3.6，对应就是cp36，一般选择的是win32，如果不确定的话可以打开cmd，输入import pip; print(pip.pep425tags.get_supported())查看支持的版本。 <img src="http://imglf2.nosdn.127.net/img/OW9PR0QwaGpuTzlUWUIvTmhBdENjQjVhdUlmYUphTFlDYXZFejRNSks0bG9YU2RWWFM3aEF3PT0.png?=imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2" alt> 可以看到，第一个是(‘cp36’, ‘cp36m’, ‘win32’)，而上面网站中就有这个版本的文件，所以我下载的是mysqlclient‑1.3.10‑cp36‑cp36m‑win32.whl 下载后使用pip install 下载文件位置+文件名,正常情况下就安装成功了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;python3版本不支持mysqldb，导致django不能连接mysql，解决方法是使用mysqlclient。 在windows平台上，先到这个网站下载对应版本的whl文件 &lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonli
      
    
    </summary>
    
      <category term="爬虫" scheme="https://next.duozhang.xin/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python" scheme="https://next.duozhang.xin/tags/python/"/>
    
  </entry>
  
</feed>
